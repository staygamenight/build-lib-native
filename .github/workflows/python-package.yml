name: Build and Download Native Lib Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ## Those android NDK/SDK variables can be override when running the file
  ANDROID_NDK_VERSION: 28c #25b #27c
  ANDROID_NDK_VERSION_LEGACY: 21e
  ANDROID_SDK_TOOLS_VERSION: 6514223
  ANDROID_SDK_BUILD_TOOLS_VERSION: 29.0.3
  ANDROID_HOME: /home/runner/Android
  ANDROID_API_LEVEL: 33 #36 #27

jobs:
  build:
    runs-on: ubuntu-24.04-arm #ubuntu-latest
  
      ## per OS dictionary-like    
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          architecture: 'aarch64'

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Upload requirements.txt
        run: |
          # Make sure the requirements.txt is present in the repo
          if [ ! -f requirements.txt ]; then
            echo "requirements.txt not found!"
            exit 1
          fi
          cat requirements.txt
          
      - name: Install Dependencies
        run: |
          sudo apt-get clean
          sudo apt-get autoclean
          sudo rm -rf /var/lib/apt/lists/
          
          #sudo apt update
          sudo apt-get update

          sudo dpkg --add-architecture armhf
          sudo dpkg --add-architecture arm64
          sudo dpkg --print-foreign-architectures
          
          sudo apt-get update

          sudo apt-get install -y libiconv-hook-dev autoconf automake \
            libtool pkg-config m4 libtool-bin libltdl-dev gettext 
          sudo apt-get install git repo make gcc g++ m4 texinfo bison flex
          #sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          #sudo apt-get install gcc-multilib
          sudo apt-get install libc6-dev build-essential

          echo "CC=aarch64-linux-gnu-gcc"  >> $GITHUB_ENV
          echo "CXX=aarch64-linux-gnu-g++"  >> $GITHUB_ENV
          export CC=aarch64-linux-gnu-gcc
          export CXX=aarch64-linux-gnu-g++
          
          #wget http://launchpadlibrarian.net/748335974/gcc-14-base_14.2.0-4ubuntu2~24.04_arm64.deb
          #sudo dpkg -i gcc-14-base_14.2.0-4ubuntu2~24.04_arm64.deb
          #wget http://launchpadlibrarian.net/748336084/libgcc-s1_14.2.0-4ubuntu2~24.04_arm64.deb
          #wget http://launchpadlibrarian.net/804169350/libc6_2.39-0ubuntu8.5_arm64.deb
          #sudo dpkg -i libc6_2.39-0ubuntu8.5_arm64.deb libgcc-s1_14.2.0-4ubuntu2~24.04_arm64.deb #circular dependency
          #wget http://launchpadlibrarian.net/799265101/libasound2-data_1.2.11-1ubuntu0.1_all.deb
          ##sudo dpkg -i libasound2-data_1.2.11-1ubuntu0.1_all.deb #libasound2t64:arm64 (1.2.11-1ubuntu0.1) over (1.2.11-1build2), dependency problems prevent configuration of libasound2t64:arm64, libasound2-data would break libasound2t64:arm64
          #wget http://launchpadlibrarian.net/799265966/libasound2t64_1.2.11-1ubuntu0.1_arm64.deb
          #sudo dpkg -i -B libasound2-data_1.2.11-1ubuntu0.1_all.deb libasound2t64_1.2.11-1ubuntu0.1_arm64.deb
          #wget http://launchpadlibrarian.net/799265959/libasound2-dev_1.2.11-1ubuntu0.1_arm64.deb
          #sudo dpkg -i libasound2-dev_1.2.11-1ubuntu0.1_arm64.deb

          #sudo apt-get remove libdb5.3t64:amd64
          #wget http://ftp.us.debian.org/debian/pool/main/d/db5.3/libdb5.3t64_5.3.28+dfsg2-9_amd64.deb
          #sudo dpkg -i libdb5.3t64_5.3.28+dfsg2-9_amd64.deb
          #wget http://ftp.us.debian.org/debian/pool/main/d/db5.3/libdb5.3t64_5.3.28+dfsg2-9_arm64.deb
          #sudo dpkg -i libdb5.3t64_5.3.28+dfsg2-9_arm64.deb #libdb5.3t64 and libdb5.3t break
          #wget http://launchpadlibrarian.net/724564385/libdb5.3t64_5.3.28+dfsg2-7_arm64.deb
          #sudo dpkg -i libdb5.3t64_5.3.28+dfsg2-7_arm64.deb
          
          #wget http://launchpadlibrarian.net/592573936/libdb5.3_5.3.28+dfsg1-0.8ubuntu3_arm64.deb
          #sudo dpkg -i libdb5.3_5.3.28+dfsg1-0.8ubuntu3_arm64.deb #libdb5.3t64:arm64 (5.3.28+dfsg2-7) breaks libdb5.3 (<< 5.3.28+dfsg2-7)
          #wget http://launchpadlibrarian.net/592808635/libsamplerate0_0.2.2-1build1_arm64.deb
          #sudo dpkg -i libsamplerate0_0.2.2-1build1_#arm64.deb
          #wget http://launchpadlibrarian.net/665999518/libstdc++6_12.3.0-1ubuntu1~22.04_arm64.deb
          #sudo dpkg -i libstdc++6_12.3.0-1ubuntu1~22.04_arm64.deb

          #wget http://launchpadlibrarian.net/581846528/libjack-jackd2-0_1.9.20~dfsg-1_arm64.deb
          #sudo dpkg -i libjack-jackd2-0_1.9.20~dfsg-1_arm64.deb
          
          #wget http://launchpadlibrarian.net/724564385/libdb5.3t64_5.3.28+dfsg2-7_arm64.deb
          #sudo dpkg -i libdb5.3t64_5.3.28+dfsg2-7_arm64.deb
          #wget http://launchpadlibrarian.net/723783896/libopus0_1.4-1build1_arm64.deb
          #sudo dpkg -i libopus0_1.4-1build1_arm64.deb
          #wget http://launchpadlibrarian.net/723776445/libsamplerate0_0.2.2-4build1_arm64.deb
          #sudo dpkg -i libsamplerate0_0.2.2-4build1_arm64.deb
          #wget http://launchpadlibrarian.net/748336095/libstdc++6_14.2.0-4ubuntu2~24.04_arm64.deb
          #sudo dpkg -i libstdc++6_14.2.0-4ubuntu2~24.04_arm64.deb
          #wget http://launchpadlibrarian.net/765563524/libjack-jackd2-0_1.9.22~dfsg-4_arm64.deb
          #sudo dpkg -i libjack-jackd2-0_1.9.22~dfsg-4_arm64.deb
          #wget http://launchpadlibrarian.net/581846317/libjack-jackd2-dev_1.9.20~dfsg-1_amd64.deb
          #sudo dpkg -i libjack-jackd2-dev_1.9.20~dfsg-1_amd64.deb
          #wget http://launchpadlibrarian.net/723553337/libportaudiocpp0_19.6.0-1.2build3_arm64.deb
          #sudo dpkg -i libportaudiocpp0_19.6.0-1.2build3_arm64.deb
          #wget http://launchpadlibrarian.net/723553336/libportaudio2_19.6.0-1.2build3_arm64.deb
          #sudo dpkg -i libportaudio2_19.6.0-1.2build3_arm64.deb
          ##wget http://launchpadlibrarian.net/470534435/libjack0_0.125.0-3build2_arm64.deb
          ##sudo dpkg -i libjack0_0.125.0-3build2_arm64.deb
          #wget https://launchpad.net/ubuntu/+source/portaudio19/19.6.0-1.2build3/+build/28030472/+files/portaudio19-dev_19.6.0-1.2build3_arm64.deb
          #sudo dpkg -i portaudio19-dev_19.6.0-1.2build3_arm64.deb
          
          sudo apt-get -f install
          sudo apt-get install portaudio19-dev:arm64
          #sudo apt-get install libportaudio2
          sudo apt-get install libasound2-dev:arm64


      - name: Install Python Dependencies
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install maturin
          #pip install git+https://github.com/T-Dynamos/python-for-android.git #scipy
          pip install git+https://github.com/kivy/python-for-android.git
          pip install --upgrade pipgrip
          pip install --upgrade Cython
          pip install pyaudio
          #arch -arm64
          #python3 -m ensurepip --upgrade
          
      - name: Extract dependencies with pipgrip
        run: |
          source .venv/bin/activate
          pipgrip $(cat requirements.txt) --lock
          #pip install setuptools==59.8.0
          #pip install Cython==0.29.36
          #pip install numpy==1.22.4
 
      - name: Set variables
        id: variable
        run: | 
          echo ${{env.ANDROID_NDK_VERSION}}
          echo ${{env.ANDROID_NDK_VERSION_LEGACY}}
          echo ${{env.ANDROID_SDK_TOOLS_VERSION}}
          echo ${{env.ANDROID_SDK_BUILD_TOOLS_VERSION}}
          echo ${{env.ANDROID_HOME}}
          echo ${{env.ANDROID_API_LEVEL}}
          
          echo "ANDROID_SDK_HOME=${{env.ANDROID_HOME}}/android-sdk"  >> $GITHUB_ENV
          echo "ANDROID_SDK_TOOLS_ARCHIVE=commandlinetools-linux-${{env.ANDROID_SDK_TOOLS_VERSION}}_latest.zip"  >> $GITHUB_ENV
          echo "ANDROID_SDK_TOOLS_DL_URL=https://dl.google.com/android/repository/commandlinetools-linux-${{env.ANDROID_SDK_TOOLS_VERSION}}_latest.zip"  >> $GITHUB_ENV
          
          echo "ANDROID_NDK_HOME=${{env.ANDROID_HOME}}/android-ndk"  >> $GITHUB_ENV
          echo "ANDROID_NDK_FOLDER=${{env.ANDROID_HOME}}/android-ndk-r${{env.ANDROID_NDK_VERSION}}"  >> $GITHUB_ENV
          echo "ANDROID_NDK_ARCHIVE=android-ndk-r${{env.ANDROID_NDK_VERSION}}-linux.zip"  >> $GITHUB_ENV
          
          echo "ANDROID_NDK_HOME_LEGACY=${{env.ANDROID_HOME}}/android-ndk-legacy"  >> $GITHUB_ENV
          echo "ANDROID_NDK_FOLDER_LEGACY=${{env.ANDROID_HOME}}/android-ndk-r${{env.ANDROID_NDK_VERSION_LEGACY}}"  >> $GITHUB_ENV
          echo "ANDROID_NDK_ARCHIVE_LEGACY=android-ndk-r${{env.ANDROID_NDK_VERSION_LEGACY}}-linux-x86_64.zip"  >> $GITHUB_ENV
          
          echo "ANDROID_NDK_GFORTRAN_ARCHIVE_ARM64=gcc-arm64-linux-x86_64.tar.bz2"  >> $GITHUB_ENV
          echo "ANDROID_NDK_GFORTRAN_ARCHIVE_ARM=gcc-arm-linux-x86_64.tar.bz2"  >> $GITHUB_ENV
          
          echo "ANDROID_NDK_DL_URL=https://dl.google.com/android/repository/android-ndk-r${{env.ANDROID_NDK_VERSION}}-linux.zip"  >> $GITHUB_ENV
          echo "ANDROID_NDK_DL_URL_LEGACY=https://dl.google.com/android/repository/android-ndk-r${{env.ANDROID_NDK_VERSION_LEGACY}}-linux-x86_64.zip"  >> $GITHUB_ENV
          
      - name: Set up Android SDK
        run: |
          #mkdir -p $HOME/Android/Sdk/cmdline-tools
          #wget https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip
          #unzip commandlinetools-linux-7302050_latest.zip -d $HOME/Android/Sdk/cmdline-tools/
          #mv $HOME/Android/Sdk/cmdline-tools/cmdline-tools $HOME/Android/Sdk/cmdline-tools/latest

          #echo "ANDROID_SDK_ROOT=$HOME/Android/Sdk" >> $GITHUB_ENV
          #echo "SDK_ROOT=$HOME/Android/Sdk" >> $GITHUB_ENV
          #echo "ANDROID_NDK_HOME=/home/runner/Android/Sdk/ndk/28.2.13676358" >> $GITHUB_ENV
          echo "LEGACY_NDK=${{env.ANDROID_HOME}}/android-ndk-legacy" >> $GITHUB_ENV
          #echo "PATH=$PATH:$HOME/Android/Sdk/cmdline-tools/latest/bin:$HOME/Android/Sdk/platform-tools:$ANDROID_NDK_HOME" >> $GITHUB_ENV

          #yes | $HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "platform-tools" "platforms;android-33" "build-tools;33.0.0"
          #$HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --list
          
          echo "info Android SDK home is           : ${{env.ANDROID_HOME}}"
          echo "info Android NDK home is           : ${{env.ANDROID_NDK_HOME}}"
          echo "info Android NDK Legacy  home is   : ${{env.ANDROID_NDK_HOME_LEGACY}}"
          echo "info Android SDK download url is   : $ANDROID_SDK_TOOLS_DL_URL"
          echo "info Android NDK download url is   : $ANDROID_NDK_DL_URL"
          echo "info Android API level is          : ${{env.ANDROID_API_LEVEL}}"
          echo "info Android NDK version is        : ${{env.ANDROID_NDK_VERSION}}"
          echo "info Android NDK Legacy version is : ${{env.ANDROID_NDK_VERSION_LEGACY}}"
          echo "info JAVA_HOME is                  : $JAVA_HOME"
          
          # download_android_sdk:
          	curl --location --progress-bar --continue-at - \
          	$ANDROID_SDK_TOOLS_DL_URL --output $ANDROID_SDK_TOOLS_ARCHIVE
          
          # download_android_ndk:
            curl --location --progress-bar --continue-at - \
          	$ANDROID_NDK_DL_URL --output $ANDROID_NDK_ARCHIVE
          
          # download_android_ndk_legacy:
          	curl --location --progress-bar --continue-at - \
          	$ANDROID_NDK_DL_URL_LEGACY --output $ANDROID_NDK_ARCHIVE_LEGACY
          
          # download_android_ndk_gfortran:
          	curl --location --progress-bar --continue-at - \
          	https://github.com/mzakharo/android-gfortran/releases/download/r${{env.ANDROID_NDK_VERSION_LEGACY}}/$ANDROID_NDK_GFORTRAN_ARCHIVE_ARM64 --output $ANDROID_NDK_GFORTRAN_ARCHIVE_ARM64
          	curl --location --progress-bar --continue-at - \
          	https://github.com/mzakharo/android-gfortran/releases/download/r${{env.ANDROID_NDK_VERSION_LEGACY}}/$ANDROID_NDK_GFORTRAN_ARCHIVE_ARM  --output $ANDROID_NDK_GFORTRAN_ARCHIVE_ARM
          
          # Extract android SDK and remove the compressed file
          # extract_android_sdk:
          	mkdir -p $ANDROID_SDK_HOME \
          	&& unzip -q $ANDROID_SDK_TOOLS_ARCHIVE -d $ANDROID_SDK_HOME \
          	&& rm -f $ANDROID_SDK_TOOLS_ARCHIVE
           
          # Extract android NDK and remove the compressed file
          # extract_android_ndk:
            mkdir -p $ANDROID_NDK_FOLDER \
          	&& unzip -q $ANDROID_NDK_ARCHIVE -d ${{env.ANDROID_HOME}} \
          	&& mv $ANDROID_NDK_FOLDER $ANDROID_NDK_HOME \
          	&& rm -f $ANDROID_NDK_ARCHIVE
          
          # extract_android_ndk_legacy:
          	mkdir -p $ANDROID_NDK_FOLDER_LEGACY \
          	&& unzip -q $ANDROID_NDK_ARCHIVE_LEGACY -d ${{env.ANDROID_HOME}} \
          	&& mv $ANDROID_NDK_FOLDER_LEGACY $ANDROID_NDK_HOME_LEGACY \
          	&& rm -f $ANDROID_NDK_ARCHIVE_LEGACY
          
          # extract_android_ndk_gfortran:
          	rm -rf $ANDROID_NDK_HOME_LEGACY/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/ \
          	&& mkdir  $ANDROID_NDK_HOME_LEGACY/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/ \
          	&& tar -xf $ANDROID_NDK_GFORTRAN_ARCHIVE_ARM64 -C $ANDROID_NDK_HOME_LEGACY/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/ --strip-components 1 \
          	&& rm -f $ANDROID_NDK_GFORTRAN_ARCHIVE_ARM64 \
          	&& rm -rf $ANDROID_NDK_HOME_LEGACY/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/ \
          	&& mkdir  $ANDROID_NDK_HOME_LEGACY/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/ \
          	&& tar -xf $ANDROID_NDK_GFORTRAN_ARCHIVE_ARM -C $ANDROID_NDK_HOME_LEGACY/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/ --strip-components 1 \
          	&& rm -f $ANDROID_NDK_GFORTRAN_ARCHIVE_ARM
          
          # updates Android SDK, install Android API, Build Tools and accept licenses
          # update_android_sdk:
          	touch /home/runner/Android/repositories.cfg
          	yes | $ANDROID_SDK_HOME/tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_HOME --licenses > /dev/null
          	$ANDROID_SDK_HOME/tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_HOME "build-tools;${{env.ANDROID_SDK_BUILD_TOOLS_VERSION}}" > /dev/null
          	$ANDROID_SDK_HOME/tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_HOME "platforms;android-${{env.ANDROID_API_LEVEL}}" > /dev/null
          	# Set avdmanager permissions executable
          	chmod +x $ANDROID_SDK_HOME/tools/bin/avdmanager
          
      - name: Remove version
        run: |
          sed -i 's/==.*//g' pipgrip.lock
          
      - name: Install Android NDK
        run: |
          #NDK_VERSION="28.2.13676358"
          #NDK_VERSION_LEGACY="21.4.7075529"
          #yes | $HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "ndk;$NDK_VERSION_LEGACY" --channel=3
          #yes | $HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "ndk;$NDK_VERSION" --channel=3

          ANDROID_NDK_GFORTRAN_ARCHIVE_ARM64=gcc-arm64-linux-x86_64.tar.bz2
          curl --location --progress-bar --continue-at - \
          https://github.com/mzakharo/android-gfortran/releases/download/r21e/gcc-arm64-linux-x86_64.tar.bz2 --output gcc-arm64-linux-x86_64.tar.bz2
          rm -rf $HOME/Android/android-ndk-legacy/toolchains/x86_64-4.9/prebuilt/linux-x86_64/ \
          && mkdir  $HOME/Android/android-ndk-legacy/toolchains/x86_64-4.9/prebuilt/linux-x86_64/ \
          && tar -xf gcc-arm64-linux-x86_64.tar.bz2 -C $HOME/Android/android-ndk-legacy/toolchains/x86_64-4.9/prebuilt/linux-x86_64/ --strip-components 1 \
          && rm -f gcc-arm64-linux-x86_64.tar.bz2
          
      - name: Build Android Package
        id: build_package
        run: |
          #sudo apt install libltdl-dev
          #sudo apt-get install gcc-11 g++-11
          #rm -rf build
          #export CXX=/usr/bin/g++-11
          ##sudo apt install update-alternatives
          ##sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 60 --slave /usr/bin/g++ g++ /usr/bin/g++-11
          ##cmake -S . -B build
          source .venv/bin/activate  # Activate virtual environment
          p4a create --requirements=$(paste -s -d, pipgrip.lock) --arch arm64-v8a --sdk-dir $ANDROID_SDK_HOME --ndk-dir $ANDROID_NDK_HOME --dist-name mydist
          #--arch arm64-v8a --arch armeabi-v7a --arch x86_64

      - name: Zip mydist folder
        run: |
          cd /home/runner/.local/share/python-for-android/dists
          zip -r mydist.zip mydist
      
      - name: List zip files
        run: |
          ls -la
          cat pipgrip.lock
      
      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v4
        with:
          name: mydist
          path: /home/runner/.local/share/python-for-android/dists/mydist.zip

      - name: Zip __init__
        run: |
          cd /home/runner/.local/share/python-for-android/build/python-installs
          zip -r mydist2.zip mydist

      - name: Upload ZIP artifact 2
        uses: actions/upload-artifact@v4
        with:
          name: mydist2
          path: /home/runner/.local/share/python-for-android/build/python-installs/mydist2.zip
